#workflow 이름
name: Backend CI/CD

#workflow 실행 이벤트 명시
on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
#이벤트 발생 시 실행 작업
jobs:
  build:
    runs-on: ubuntu-latest    #vm 실행 환경: 최신 버전
    #실행될 jobs 순서대로 명시
    steps:
    - uses: actions/checkout@v4
    #JDK 17설치
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    #Gradle Build를 위한 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    #Gradle Build (test제외)
    - name: Build with Gradle
      run: ./gradlew build --exclude-task test
    #DockerHub 로그인
    - name: DockerHub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    #Docker 이미지 빌
    - name: Docker Image Build and Push
      run: |
        # .env 파일을 Secrets에서 가져와서 생성
        echo "${{ secrets.DOTENV_FILE }}" > .env
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/wetrash-backend:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/wetrash-backend:latest
    #EC2 인스턴스 접속 및 실행(백엔드만)
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/deploy  #docker-compose.yml 경로
          docker compose pull backend #가장 최신의 백엔드 이미지 pull
          docker compose up -d --no-deps backend  #백 애플리케이션 실행
