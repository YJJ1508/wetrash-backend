spring:
  datasource:
    #MySQL
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  config:
    import: optional:file:.env[.properties]
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URL}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URL}
            scope:
              - account_email
              - profile_image
        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  devtools:
    restart:
      enabled: false
springdoc:
  swagger-ui:
    url: /v3/api-docs
    path: /swagger-ui/index.html #swagger ui 접근 경로
    operations-sorter: alpha #API를 알파벳 순서대로 정렬
    tags-sorter: alpha #태그 알파벳 순서 정렬
  api-docs:
    path: /v3/api-docs #api 문서 경로 설정
    enabled: true #swagger api문서 활성화
  show-actuator: true #spring boot actuator 엔드포인트도 swagger에 표시
  packages-to-scan: yjj.wetrash.domain.member.controller
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION}
logging:
  level:
    root: INFO # 프로젝트 전체는 info로 두고
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.client: DEBUG
    org.springframework.security.web.FilterChainProxy: DEBUG
    yjj.wetrash.global.security.oauth: DEBUG

cors:
  allowed_origins: ${CORS_ALLOWED_ORIGINS}

file:
  upload-dir: ${FILE_UPLOAD_DIR}
  access-url: ${FILE_ACCESS_URL}
  base-url: ${FILE_BASE_URL}