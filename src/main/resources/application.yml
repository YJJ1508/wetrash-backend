spring:
  datasource:
    #MySQL
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/wetrash?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    open-in-view: false
  data:
    redis:
      host: localhost
      port: 6379
  config:
    import: optional:file:.env[.properties]
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
              - openid
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"
            scope:
              - email
              - profile

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "http:localhost:8080/login/oauth2/code/kakao"
            scope:
              - email
              - profile
        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

springdoc:
  swagger-ui:
    url: /v3/api-docs
    path: /swagger-ui/index.html #swagger ui 접근 경로
    operations-sorter: alpha #API를 알파벳 순서대로 정렬
    tags-sorter: alpha #태그 알파벳 순서 정렬
  api-docs:
    path: /v3/api-docs #api 문서 경로 설정
    enabled: true #swagger api문서 활성화
  show-actuator: true #spring boot actuator 엔드포인트도 swagger에 표시
  packages-to-scan: yjj.wetrash.domain.member.controller
jwt:
  secret: 93FzaTY0U2VjcmV0S2u5Rm9yU2anpbF0dXJlUeVdcG9zZXj=
  expiration: 86400000 # 24시간
logging:
  level:
    org.springframework.security: DEBUG